"use strict";function $(e,t){return Array.from(e.getElementsByTagName(t))}function normalizeId(e){return"#"===e[0]?e:`#${e}`}function $ns(e,t,n){return Array.from(e.getElementsByTagNameNS(n,t))}function nodeVal(e){return e?.normalize(),e&&e.textContent||""}function get1(e,t,n){const o=e.getElementsByTagName(t),r=o.length?o[0]:null;return r&&n&&n(r),r}function get(e,t,n){const o={};if(!e)return o;const r=e.getElementsByTagName(t),i=r.length?r[0]:null;return i&&n?n(i,o):o}function val1(e,t,n){const o=nodeVal(get1(e,t));return o&&n&&n(o)||{}}function $num(e,t,n){const o=parseFloat(nodeVal(get1(e,t)));if(!isNaN(o))return o&&n&&n(o)||{}}function num1(e,t,n){const o=parseFloat(nodeVal(get1(e,t)));if(!isNaN(o))return n&&n(o),o}function getMulti(e,t){const n={};for(const o of t)val1(e,o,(e=>{n[o]=e}));return n}function isElement(e){return 1===e?.nodeType}function getLineStyle(e){return get(e,"line",(e=>Object.assign({},val1(e,"color",(e=>({stroke:`#${e}`}))),$num(e,"opacity",(e=>({"stroke-opacity":e}))),$num(e,"width",(e=>({"stroke-width":96*e/25.4}))))))}function getExtensions(e){let t=[];if(null===e)return t;for(const n of Array.from(e.childNodes)){if(!isElement(n))continue;const e=abbreviateName(n.nodeName);if("gpxtpx:TrackPointExtension"===e)t=t.concat(getExtensions(n));else{const o=nodeVal(n);t.push([e,parseNumeric(o)])}}return t}function abbreviateName(e){return["heart","gpxtpx:hr","hr"].includes(e)?"heart":e}function parseNumeric(e){const t=parseFloat(e);return isNaN(t)?e:t}function coordPair$1(e){const t=[parseFloat(e.getAttribute("lon")||""),parseFloat(e.getAttribute("lat")||"")];if(isNaN(t[0])||isNaN(t[1]))return null;num1(e,"ele",(e=>{t.push(e)}));const n=get1(e,"time");return{coordinates:t,time:n?nodeVal(n):null,extendedValues:getExtensions(get1(e,"extensions"))}}function extractProperties(e){const t=getMulti(e,["name","cmt","desc","type","time","keywords"]),n=Array.from(e.getElementsByTagNameNS("http://www.garmin.com/xmlschemas/GpxExtensions/v3","*"));for(const r of n)r.parentNode?.parentNode===e&&(t[r.tagName.replace(":","_")]=nodeVal(r));const o=$(e,"link");return o.length&&(t.links=o.map((e=>Object.assign({href:e.getAttribute("href")},getMulti(e,["text","type"]))))),t}function getPoints$1(e,t){const n=$(e,t),o=[],r=[],i={};for(let s=0;s<n.length;s++){const e=coordPair$1(n[s]);if(e){o.push(e.coordinates),e.time&&r.push(e.time);for(const[t,o]of e.extendedValues){const e="heart"===t?t:t.replace("gpxtpx:","")+"s";i[e]||(i[e]=Array(n.length).fill(null)),i[e][s]=o}}}if(!(o.length<2))return{line:o,times:r,extendedValues:i}}function getRoute(e){const t=getPoints$1(e,"rtept");if(t)return{type:"Feature",properties:Object.assign({_gpxType:"rte"},extractProperties(e),getLineStyle(get1(e,"extensions"))),geometry:{type:"LineString",coordinates:t.line}}}function getTrack(e){const t=$(e,"trkseg"),n=[],o=[],r=[];for(const a of t){const e=getPoints$1(a,"trkpt");e&&(r.push(e),e.times&&e.times.length&&o.push(e.times))}if(0===r.length)return null;const i=r.length>1,s=Object.assign({_gpxType:"trk"},extractProperties(e),getLineStyle(get1(e,"extensions")),o.length?{coordinateProperties:{times:i?o:o[0]}}:{});for(const a of r){n.push(a.line),s.coordinateProperties||(s.coordinateProperties={});const e=s.coordinateProperties,t=Object.entries(a.extendedValues);for(let n=0;n<t.length;n++){const[o,s]=t[n];i?(e[o]||(e[o]=r.map((e=>new Array(e.line.length).fill(null)))),e[o][n]=s):e[o]=s}}return{type:"Feature",properties:s,geometry:i?{type:"MultiLineString",coordinates:n}:{type:"LineString",coordinates:n[0]}}}function getPoint(e){const t=Object.assign(extractProperties(e),getMulti(e,["sym"])),n=coordPair$1(e);return n?{type:"Feature",properties:t,geometry:{type:"Point",coordinates:n.coordinates}}:null}function*gpxGen(e){for(const t of $(e,"trk")){const e=getTrack(t);e&&(yield e)}for(const t of $(e,"rte")){const e=getRoute(t);e&&(yield e)}for(const t of $(e,"wpt")){const e=getPoint(t);e&&(yield e)}}function gpx(e){return{type:"FeatureCollection",features:Array.from(gpxGen(e))}}Object.defineProperty(exports,"__esModule",{value:!0});const EXTENSIONS_NS="http://www.garmin.com/xmlschemas/ActivityExtension/v2",TRACKPOINT_ATTRIBUTES=[["heartRate","heartRates"],["Cadence","cadences"],["Speed","speeds"],["Watts","watts"]],LAP_ATTRIBUTES=[["TotalTimeSeconds","totalTimeSeconds"],["DistanceMeters","distanceMeters"],["MaximumSpeed","maxSpeed"],["AverageHeartRateBpm","avgHeartRate"],["MaximumHeartRateBpm","maxHeartRate"],["AvgSpeed","avgSpeed"],["AvgWatts","avgWatts"],["MaxWatts","maxWatts"]];function getProperties(e,t){const n=[];for(const[o,r]of t){let t=get1(e,o);if(!t){const n=e.getElementsByTagNameNS(EXTENSIONS_NS,o);n.length&&(t=n[0])}const i=parseFloat(nodeVal(t));isNaN(i)||n.push([r,i])}return n}function coordPair(e){const t=[num1(e,"LongitudeDegrees"),num1(e,"LatitudeDegrees")];if(void 0===t[0]||isNaN(t[0])||void 0===t[1]||isNaN(t[1]))return null;const n=get1(e,"HeartRateBpm"),o=nodeVal(get1(e,"Time"));return get1(e,"AltitudeMeters",(e=>{const n=parseFloat(nodeVal(e));isNaN(n)||t.push(n)})),{coordinates:t,time:o||null,heartRate:n?parseFloat(nodeVal(n)):null,extensions:getProperties(e,TRACKPOINT_ATTRIBUTES)}}function getPoints(e){const t=$(e,"Trackpoint"),n=[],o=[],r=[];if(t.length<2)return null;const i={},s={extendedProperties:i};for(let a=0;a<t.length;a++){const e=coordPair(t[a]);if(null===e)continue;n.push(e.coordinates);const{time:s,heartRate:c,extensions:l}=e;s&&o.push(s),c&&r.push(c);for(const[n,o]of l)i[n]||(i[n]=Array(t.length).fill(null)),i[n][a]=o}return n.length<2?null:Object.assign(s,{line:n,times:o,heartRates:r})}function getLap(e){const t=$(e,"Track"),n=[],o=[],r=[],i=[];let s;const a=Object.assign(Object.fromEntries(getProperties(e,LAP_ATTRIBUTES)),get(e,"Name",(e=>({name:nodeVal(e)}))));for(const c of t)s=getPoints(c),s&&(n.push(s.line),s.times.length&&o.push(s.times),s.heartRates.length&&r.push(s.heartRates),i.push(s.extendedProperties));for(let c=0;c<i.length;c++){const e=i[c];for(const o in e)1===t.length?s&&(a[o]=s.extendedProperties[o]):(a[o]||(a[o]=n.map((e=>Array(e.length).fill(null)))),a[o][c]=e[o])}return 0===n.length?null:((o.length||r.length)&&(a.coordinateProperties=Object.assign(o.length?{times:1===n.length?o[0]:o}:{},r.length?{heart:1===n.length?r[0]:r}:{})),{type:"Feature",properties:a,geometry:1===n.length?{type:"LineString",coordinates:n[0]}:{type:"MultiLineString",coordinates:n}})}function*tcxGen(e){for(const t of $(e,"Lap")){const e=getLap(t);e&&(yield e)}for(const t of $(e,"Courses")){const e=getLap(t);e&&(yield e)}}function tcx(e){return{type:"FeatureCollection",features:Array.from(tcxGen(e))}}function fixColor(e,t){const n={},o="stroke"==t||"fill"===t?t:t+"-color";return"#"===e[0]&&(e=e.substring(1)),6===e.length||3===e.length?n[o]="#"+e:8===e.length&&(n[t+"-opacity"]=parseInt(e.substring(0,2),16)/255,n[o]="#"+e.substring(6,8)+e.substring(4,6)+e.substring(2,4)),n}function numericProperty(e,t,n){const o={};return num1(e,t,(e=>{o[n]=e})),o}function getColor(e,t){return get(e,"color",(e=>fixColor(nodeVal(e),t)))}function extractIconHref(e){return get(e,"Icon",((e,t)=>(val1(e,"href",(e=>{t.icon=e})),t)))}function extractIcon(e){return get(e,"IconStyle",(e=>Object.assign(getColor(e,"icon"),numericProperty(e,"scale","icon-scale"),numericProperty(e,"heading","icon-heading"),get(e,"hotSpot",(e=>{const t=parseFloat(e.getAttribute("x")||""),n=parseFloat(e.getAttribute("y")||""),o=e.getAttribute("xunits")||"",r=e.getAttribute("yunits")||"";return isNaN(t)||isNaN(n)?{}:{"icon-offset":[t,n],"icon-offset-units":[o,r]}})),extractIconHref(e))))}function extractLabel(e){return get(e,"LabelStyle",(e=>Object.assign(getColor(e,"label"),numericProperty(e,"scale","label-scale"))))}function extractLine(e){return get(e,"LineStyle",(e=>Object.assign(getColor(e,"stroke"),numericProperty(e,"width","stroke-width"))))}function extractPoly(e){return get(e,"PolyStyle",((e,t)=>Object.assign(t,get(e,"color",(e=>fixColor(nodeVal(e),"fill"))),val1(e,"fill",(e=>{if("0"===e)return{"fill-opacity":0}})),val1(e,"outline",(e=>{if("0"===e)return{"stroke-opacity":0}})))))}function extractStyle(e){return Object.assign({},extractPoly(e),extractLine(e),extractLabel(e),extractIcon(e))}const toNumber=e=>Number(e),typeConverters={string:e=>e,int:toNumber,uint:toNumber,short:toNumber,ushort:toNumber,float:toNumber,double:toNumber,bool:e=>Boolean(e)};function extractExtendedData(e,t){return get(e,"ExtendedData",((e,n)=>{for(const t of $(e,"Data"))n[t.getAttribute("name")||""]=nodeVal(get1(t,"value"));for(const o of $(e,"SimpleData")){const e=o.getAttribute("name")||"",r=t[e]||typeConverters.string;n[e]=r(nodeVal(o))}return n}))}function getMaybeHTMLDescription(e){const t=get1(e,"description");for(const n of Array.from(t?.childNodes||[]))if(4===n.nodeType)return{description:{"@type":"html",value:nodeVal(n)}};return{}}function extractTimeSpan(e){return get(e,"TimeSpan",(e=>({timespan:{begin:nodeVal(get1(e,"begin")),end:nodeVal(get1(e,"end"))}})))}function extractTimeStamp(e){return get(e,"TimeStamp",(e=>({timestamp:nodeVal(get1(e,"when"))})))}function extractCascadedStyle(e,t){return val1(e,"styleUrl",(e=>(e=normalizeId(e),t[e]?Object.assign({styleUrl:e},t[e]):{styleUrl:e})))}const removeSpace=/\s*/g,trimSpace=/^\s*|\s*$/g,splitSpace=/\s+/;function coord1(e){return e.replace(removeSpace,"").split(",").map(parseFloat).filter((e=>!isNaN(e))).slice(0,3)}function coord(e){return e.replace(trimSpace,"").split(splitSpace).map(coord1).filter((e=>e.length>=2))}function gxCoords(e){let t=$(e,"coord");0===t.length&&(t=$ns(e,"coord","*"));const n=t.map((e=>nodeVal(e).split(" ").map(parseFloat)));return 0===n.length?null:{geometry:n.length>2?{type:"LineString",coordinates:n}:{type:"Point",coordinates:n[0]},times:$(e,"when").map((e=>nodeVal(e)))}}function fixRing(e){if(0===e.length)return e;const t=e[0],n=e[e.length-1];let o=!0;for(let r=0;r<Math.max(t.length,n.length);r++)if(t[r]!==n[r]){o=!1;break}return o?e:e.concat([e[0]])}function getCoordinates(e){return nodeVal(get1(e,"coordinates"))}function getGeometry(e){let t=[],n=[];for(let o=0;o<e.childNodes.length;o++){const r=e.childNodes.item(o);if(isElement(r))switch(r.tagName){case"MultiGeometry":case"MultiTrack":case"gx:MultiTrack":{const e=getGeometry(r);t=t.concat(e.geometries),n=n.concat(e.coordTimes);break}case"Point":{const e=coord1(getCoordinates(r));e.length>=2&&t.push({type:"Point",coordinates:e});break}case"LinearRing":case"LineString":{const e=coord(getCoordinates(r));e.length>=2&&t.push({type:"LineString",coordinates:e});break}case"Polygon":{const e=[];for(const t of $(r,"LinearRing")){const n=fixRing(coord(getCoordinates(t)));n.length>=4&&e.push(n)}e.length&&t.push({type:"Polygon",coordinates:e});break}case"Track":case"gx:Track":{const e=gxCoords(r);if(!e)break;const{times:o,geometry:i}=e;t.push(i),o.length&&n.push(o);break}}}return{geometries:t,coordTimes:n}}function geometryListToGeometry(e){return 0===e.length?null:1===e.length?e[0]:{type:"GeometryCollection",geometries:e}}function getPlacemark(e,t,n,o){const{coordTimes:r,geometries:i}=getGeometry(e),s=geometryListToGeometry(i);if(!s&&o.skipNullGeometry)return null;const a={type:"Feature",geometry:s,properties:Object.assign(getMulti(e,["name","address","visibility","open","phoneNumber","description"]),getMaybeHTMLDescription(e),extractCascadedStyle(e,t),extractStyle(e),extractExtendedData(e,n),extractTimeSpan(e),extractTimeStamp(e),r.length?{coordinateProperties:{times:1===r.length?r[0]:r}}:{})};void 0!==a.properties?.visibility&&(a.properties.visibility="0"!==a.properties.visibility);const c=e.getAttribute("id");return null!==c&&""!==c&&(a.id=c),a}function getGroundOverlayBox(e){if(get1(e,"gx:LatLonQuad")){return{geometry:{type:"Polygon",coordinates:[fixRing(coord(getCoordinates(e)))]}}}return getLatLonBox(e)}const DEGREES_TO_RADIANS=Math.PI/180;function rotateBox(e,t,n){const o=[(e[0]+e[2])/2,(e[1]+e[3])/2];return[t[0].map((e=>{const t=e[1]-o[1],r=e[0]-o[0],i=Math.sqrt(Math.pow(t,2)+Math.pow(r,2)),s=Math.atan2(t,r)+n*DEGREES_TO_RADIANS;return[o[0]+Math.cos(s)*i,o[1]+Math.sin(s)*i]}))]}function getLatLonBox(e){const t=get1(e,"LatLonBox");if(t){const e=num1(t,"north"),n=num1(t,"west"),o=num1(t,"east"),r=num1(t,"south"),i=num1(t,"rotation");if("number"===typeof e&&"number"===typeof r&&"number"===typeof n&&"number"===typeof o){const t=[n,r,o,e];let s=[[[n,e],[o,e],[o,r],[n,r],[n,e]]];return"number"===typeof i&&(s=rotateBox(t,s,i)),{bbox:t,geometry:{type:"Polygon",coordinates:s}}}}return null}function getGroundOverlay(e,t,n,o){const r=getGroundOverlayBox(e),i=r?.geometry||null;if(!i&&o.skipNullGeometry)return null;const s={type:"Feature",geometry:i,properties:Object.assign({"@geometry-type":"groundoverlay"},getMulti(e,["name","address","visibility","open","phoneNumber","description"]),getMaybeHTMLDescription(e),extractCascadedStyle(e,t),extractStyle(e),extractIconHref(e),extractExtendedData(e,n),extractTimeSpan(e),extractTimeStamp(e))};r?.bbox&&(s.bbox=r.bbox),void 0!==s.properties?.visibility&&(s.properties.visibility="0"!==s.properties.visibility);const a=e.getAttribute("id");return null!==a&&""!==a&&(s.id=a),s}function getStyleId(e){let t=e.getAttribute("id");const n=e.parentNode;return!t&&isElement(n)&&"CascadingStyle"===n.localName&&(t=n.getAttribute("kml:id")||n.getAttribute("id")),normalizeId(t||"")}function buildStyleMap(e){const t={};for(const n of $(e,"Style"))t[getStyleId(n)]=extractStyle(n);for(const n of $(e,"StyleMap")){const e=normalizeId(n.getAttribute("id")||"");val1(n,"styleUrl",(n=>{n=normalizeId(n),t[n]&&(t[e]=t[n])}))}return t}function buildSchema(e){const t={};for(const n of $(e,"SimpleField"))t[n.getAttribute("name")||""]=typeConverters[n.getAttribute("type")||""]||typeConverters.string;return t}const FOLDER_PROPS=["name","visibility","open","address","description","phoneNumber","visibility"];function getFolder(e){const t={};for(const n of Array.from(e.childNodes))isElement(n)&&FOLDER_PROPS.includes(n.tagName)&&(t[n.tagName]=nodeVal(n));return{type:"folder",meta:t,children:[]}}function kmlWithFolders(e,t={skipNullGeometry:!1}){const n=buildStyleMap(e),o=buildSchema(e),r={type:"root",children:[]};return function e(t,r,i){if(isElement(t))switch(t.tagName){case"GroundOverlay":{const e=getGroundOverlay(t,n,o,i);e&&r.children.push(e);break}case"Placemark":{const e=getPlacemark(t,n,o,i);e&&r.children.push(e);break}case"Folder":{const e=getFolder(t);r.children.push(e),r=e;break}}if(t.childNodes)for(let n=0;n<t.childNodes.length;n++)e(t.childNodes[n],r,i)}(e,r,t),r}function*kmlGen(e,t={skipNullGeometry:!1}){const n=buildStyleMap(e),o=buildSchema(e);for(const r of $(e,"Placemark")){const e=getPlacemark(r,n,o,t);e&&(yield e)}for(const r of $(e,"GroundOverlay")){const e=getGroundOverlay(r,n,o,t);e&&(yield e)}}function kml(e,t={skipNullGeometry:!1}){return{type:"FeatureCollection",features:Array.from(kmlGen(e,t))}}exports.gpx=gpx,exports.gpxGen=gpxGen,exports.kml=kml,exports.kmlGen=kmlGen,exports.kmlWithFolders=kmlWithFolders,exports.tcx=tcx,exports.tcxGen=tcxGen;